"""
Django settings for nyunite project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path
import django_heroku
import dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# Loading .env file
# TODO: Remove .env from repo and reset secret key
dotenv.read_dotenv()

SECRET_KEY = str(
    os.environ.get(
        "SECRET_KEY",
        "django-insecure-x933uk5yv#^n$s)kn&u-$8^(h4i@b!cgum$c6c964e3=ehaa0o",
    )
)

DEBUG = bool(os.environ.get("DEBUG_MODE", True))

# Host settings
ALLOWED_HOSTS = ["nyunite.herokuapp.com", "nyunite-prod.herokuapp.com", "127.0.0.1"]

# Configure email host server
EMAIL_USE_TLS = True
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = str(os.environ.get("SMTP_EMAIL"))
EMAIL_HOST_PASSWORD = str(os.environ.get("SMTP_PASSWORD"))
EMAIL_PORT = 587

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "users",
    "crispy_forms",
    "corsheaders",
    "rest_framework",
    "multiselectfield",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "nyunite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "users", "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "nyunite.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
host = os.environ.get("DATABASE_URL", "")
name = os.environ.get("DATABASE_NAME", "nyunite")
user = os.environ.get("DATABASE_USER", "nyuniteadmin")
password = os.environ.get("DATABASE_PASSWORD", "django1234")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "HOST": host,
        "NAME": name,
        "USER": user,
        "PASSWORD": password,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/New_York"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
# STATICFILES_DIRS = [os.path.join(BASE_DIR, "frontend", "build", "static")]
STATICFILES_DIRS = [os.path.join(BASE_DIR, "users", "static")]
MEDIA_ROOT = os.path.join(
    BASE_DIR, "media/"
)  # Directory where uploaded media is saved.
MEDIA_URL = "/images/"  # Public URL at the browser


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
#
# CORS_ORIGIN_WHITELIST = [
#     "http://localhost:3000",
# ]

# Default redirect urls
LOGIN_URL = "login"

# Activate Django-Heroku.
django_heroku.settings(locals())
